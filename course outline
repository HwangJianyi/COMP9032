Course Outline

Course Details
Course Code	COMP9032
Course Title	Microprocessors and Interfacing
Convenor	Hui Guo
Admin	Hui Guo
Classes	Lectures : Mon. 18:00-21:00, ChemSc M11 
Timetable for all classes
Consultations	Fri. 15:00-17:00, K17-501F
Units of Credit	6
Course Website	http://cse.unsw.edu.au/~cs9032/18s2/
Handbook Entry	http://www.handbook.unsw.edu.au/postgraduate/courses/current/COMP9032.html
Course Summary
This course is to introduce students the basic concepts and major components of the microprocessor and microcontroller, and provide students with knowledge and skills for solving problems with microprocessor/microcontroller

Advantageous Knowledge
Before commencing this course, it is helpful if students have basic knowledge about :

binary number
C programming
digital circuits
Which will also be briefly discussed in the course.

Student Learning Outcomes
After completing this course, students will:

know the fundamentals of microprocessors and microcontrollers,
understand how C programs are converted into machine instructions,
be proficient in AVR assembly language programming,
understand typical interface designs between hardware and software,
know how serial communication works,
understand how analog signals are converted into digital signals and vice versa, and
develop basic development skills for microprocessor/microcontroller applications.
This course contributes to the development of the following graduate capabilities:

Graduate Capability	Acquired in
Scholars capable of independent and collaborative enquiry, rigorous in their analysis, critique and reflection, and able to innovate by applying their knowledge and skills to the solution of novel as well as routine problems	lecture discussions, lab exercises, project design
Entrepreneurial leaders capable of initiating and embracing innovation and change, as well as engaging and enabling others to contribute to change	lab exercises 
Professionals capable of ethical, self- directed practice and independent lifelong learning	lab exercises and design project 
Global citizens who are culturally adept and capable of respecting diversity and acting in a socially just and responsible way	lecture and lab classes 
Teaching Strategies
Lectures introduce concepts, theories and show examples of how design and implement a microprocessor application system.
Tutorials reinforce concepts and provide additional examples.
Labs enhance the understanding of what has been discussed in the lecture, and also provide opportunities to work with other students
The assignment allows students to solve significant problems by using what has been learned in the course.
Teaching Rationale
This course teaches both theory and skills needed to design and implement systems utilising microprocessors. Passing this course involves keeping up with the theory and completing the lab exercises. The lab work brings the theory alive and clarifies deeper issues. Without the theory, the lab work is difficult to master. Each therefore complements the other, and both require your time and effort.

It is our belief that certain activities make a world of difference to your learning experience at the university. You should:

actively participate in lectures - if something is unclear, ask for clarification. If you don't understand something, try to figure it out when you reflect upon the material during private study, and if you still don't get it, raise it during the next class;
do not imagine you are the only one having trouble with something; chances are someone else is having trouble as well. However, lecturers or tutors aren't necessarily aware of your problems, so please let them know when something is troubling you; do not leave the problem too late till it is hard to fix.
prepare tutorials beforehand - know which problems you have difficulty solving â€“ so you will have more understanding of the problems and solutions.
prepare for labs by reading up what is expected well before your lab session - sometimes you will need to complete some preparatory exercises - lab time is too valuable to waste on preparations that could have been completed beforehand.
Student Conduct
The Student Code of Conduct ( Information , Policy ) sets out what the University expects from students as members of the UNSW community. As well as the learning, teaching and research environment, the University aims to provide an environment that enables students to achieve their full potential and to provide an experience consistent with the University's values and guiding principles. A condition of enrolment is that students inform themselves of the University's rules and policies affecting them, and conduct themselves accordingly.

In particular, students have the responsibility to observe standards of equity and respect in dealing with every member of the University community. This applies to all activities on UNSW premises and all external activities related to study and research. This includes behaviour in person as well as behaviour on social media, for example Facebook groups set up for the purpose of discussing UNSW courses or course work. Behaviour that is considered in breach of the Student Code Policy as discriminatory, sexually inappropriate, bullying, harassing, invading another's privacy or causing any person to fear for their personal safety is serious misconduct and can lead to severe penalties, including suspension or exclusion from UNSW.

If you have any concerns, you may raise them with your lecturer, or approach the School Ethics Officer , Grievance Officer , or one of the student representatives.

Plagiarism is defined as using the words or ideas of others and presenting them as your own. UNSW and CSE treat plagiarism as academic misconduct, which means that it carries penalties as severe as being excluded from further study at UNSW. There are several on-line sources to help you understand what plagiarism is and how it is dealt with at UNSW:

Plagiarism and Academic Integrity
UNSW Plagiarism Procedure
Make sure that you read and understand these. Ignorance is not accepted as an excuse for plagiarism. In particular, you are also responsible that your assignment files are not accessible by anyone but you by setting the correct permissions in your CSE directory and code repository, if using. Note also that plagiarism includes paying or asking another person to do a piece of work for you and then submitting it as your own work.

UNSW has an ongoing commitment to fostering a culture of learning informed by academic integrity. All UNSW staff and students have a responsibility to adhere to this principle of academic integrity. Plagiarism undermines academic integrity and is not tolerated at UNSW. Plagiarism at UNSW is defined as using the words or ideas of others and passing them off as your own.

If you haven't done so yet, please take the time to read the full text of

UNSW's policy regarding academic honesty and plagiarism
The pages below describe the policies and procedures in more detail:

Student Code Policy
Student Misconduct Procedure
Plagiarism Policy Statement
Plagiarism Procedure
You should also read the following page which describes your rights and responsibilities in the CSE context:

Essential Advice for CSE Students
Course Plan
Lectures:

Each week there is a three-hour lecture. The following topics will be covered:

Instruction set architecture
Number systems (a brief review)
AVR assembly programming and assembly process
Interrupts
Buses and I/O
Serial communication
Analog/digital and digital/analog conversions.
Laboratories:

The first lab starts in Week 2 . Each week you are required to attend a compulsory two-hour laboratory.

You work in the laboratory in a group of TWO students. If you intend to work with a partner of your choice, let your partner select the same laboratory session as yours. Otherwise, you will be randomly paired with another student if you haven't chosen a partner by the time of the first laboratory session.

There will be four experiments this session. Each lab exercise consists of a number of tasks. Your work will be marked by the lab tutor.

You will use the AVR Studio to develop, debug and simulate your AVR assembly programs and use the AVR lab board to run your program. The AVR board will be used in Experiment 3 onwards. The lab tutor will assist you with the lab work. However, you cannot ask the tutor for the solution to a lab task.

You are strongly recommended to download AVR Studio and install it on your PC or laptop. For each lab, you need to write programs at home. Otherwise, you will be probably unable to finish it on time.

Tutorials:

There will be no formal tutorial classes. However, you will be given some take-home questions based on the lecture material. Solutions to some of the questions will be discussed in the following lecture class.

Assignments:

There will be one project in this session. You are required to complete it on your own. The assignment will be released in Week 9.

Mid-term exam:

During the lecture in Week 6 (Aug. 27), there will be a 60-minute mid-term exam. The location is to be decided.

Final exam:

There will be a formal two-hour exam at the end of this course. It is a closed book exam, covering materials from lectures, labs, tutorials and the assignment.

Assessment
To pass this course, you MUST get at least 50% of the full marks in lab, return the lab board, and achieve at least 40/100 in the final exam and 50/100 in the final result. Your final result is calculated based on

Mid-term exam 20%
Lab exercises 20%
Assignments 15%
Final exam 45%
Late penalties: 
You are expected to complete each lab on time. The maximum lateness allowed for a lab is ONE WEEK and a 20% late penalty will be applied. For the assignment, the late penalty is 10% off per day.

Supplementary Exam:

You will be given a supplementary exam IF
you have not been caught for plagiarism, and
you fall into the following two cases:
You miss the final exam with a good medical excuse; You will get a mark calculated in the same way as other students who sat the original exam.
You end up with a mark in the range 45-49, after sitting the final exam; You can expect a maximum mark of 50 if you successfully complete the supplementary exam.

Note that all requests for special consideration must be put in writing within one week of the event to the Student Centre.

Resources for Students
References:

Fredrick M. Cady: Microcontrollers and Microcomputers â€”Principles of Software and Hardware Engineering, Oxford University Press, 2 nd Edition, 2010
AVR data sheet and instruction manual (online)
Lab board I/O connection diagrams (online)
